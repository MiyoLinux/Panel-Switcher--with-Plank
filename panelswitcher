#!/usr/bin/env python2
#
# Originally written/coded by my friend ajjames31 for OBRevenge.
#
# Adapted, modified, and reconfigured for MiyoLinux.
#

import pygtk
import gtk
import os

class Base:
    def destroy(self, widget, data=None):
        gtk.main_quit()

    def starttint(self, widget):
        os.system("sed -i -e 's/xfce4-panel/tint2/g' ~/.config/openbox/autostart;sed -i -e 's/lxpanel/tint2/g' ~/.config/openbox/autostart;killall xfce4-panel;killall lxpanel;nohup tint2 > /dev/null 2> /dev/null &")

    def startlxpanel(self, widget):
        os.system("sed -i -e 's/edge=bottom/edge=bottom/g' ~/.config/lxpanel/default/panels/panel;sed -i -e 's/xfce4-panel/lxpanel/g' ~/.config/openbox/autostart;sed -i -e 's/tint2/lxpanel/g' ~/.config/openbox/autostart;killall lxpanel;killall tint2;killall xfce4-panel;nohup lxpanel > /dev/null 2> /dev/null &")

    def startxfce(self, widget):
        os.system("sed -i -e 's/p=12/p=6/g' ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml;sed -i -e 's/tint2/xfce4-panel/g' ~/.config/openbox/autostart;sed -i -e 's/lxpanel/xfce4-panel/g' ~/.config/openbox/autostart;killall xfce4-panel;killall tint2;killall lxpanel;nohup xfce4-panel > /dev/null 2> /dev/null &")
        
    def startdock(self, widget):
        os.system("sed -i '/plank/d' ~/.config/openbox/autostart;echo 'plank &' >> ~/.config/openbox/autostart;plank &")

    def stopdock(self, widget):
        os.system("sed -i '/plank/d' ~/.config/openbox/autostart;killall plank")
        
    def __init__(self):
        self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        self.window.set_position(gtk.WIN_POS_CENTER)
        self.window.set_size_request(360, 200)
        self.window.set_title("MiyoLinux Panel Switcher")

        # Tint2 Button        
        self.tintbutton = gtk.Button("Tint2")
        self.tintbutton.connect("clicked", self.starttint)
        self.tintbutton.set_tooltip_text("Start Tint2")
        

        # LXPanel Button
        self.lxbutton = gtk.Button("LXPanel")
        self.lxbutton.connect("clicked", self.startlxpanel)
        self.lxbutton.set_tooltip_text("Start LXPanel")
        

        # XFCE4 Panel Button
        self.xfcebutton = gtk.Button("Xfce4")
        self.xfcebutton.connect("clicked", self.startxfce)
        self.xfcebutton.set_tooltip_text("Start Xfce4 Panel")
        
        # Dock Buttons
        self.dockonbutton = gtk.Button("On")
        self.dockonbutton.connect("clicked", self.stopdock)
        self.dockonbutton.connect("clicked", self.startdock)
        self.dockonbutton.set_tooltip_text("Start Dock")
        self.dockoffbutton = gtk.Button("Off")
        self.dockoffbutton.connect("clicked", self.stopdock)
        self.dockoffbutton.set_tooltip_text("Remove Dock")

        # Labels
        self.label = gtk.Label("Panels")
        self.docklabel = gtk.Label("Dock")

        # Box Containers
        self.hbox1 = gtk.HBox()
        self.hbox1.set_homogeneous(10)
        self.hbox1.pack_start(self.tintbutton)
        self.hbox1.pack_start(self.lxbutton)
        self.hbox1.pack_start(self.xfcebutton)
        self.vbox = gtk.VBox()
        self.hbox4 = gtk.HBox()
        #self.hbox4.pack_start(self.image)
        self.hbox2 = gtk.HBox()
        self.hbox2.pack_start(self.label)
        self.hbox3 = gtk.HBox()
        self.hbox5 = gtk.HBox()
        self.hbox5.pack_start(self.docklabel)
        self.hbox6 = gtk.HBox()
        self.hbox6.set_homogeneous(20)
        self.hbox6.pack_start(self.dockonbutton)
        self.hbox6.pack_start(self.dockoffbutton)
        self.hbox7 = gtk.HBox()

        # Item Placement
        self.window.add(self.vbox)
        self.vbox.add(self.hbox4)
        self.vbox.add(self.hbox2)
        self.vbox.add(self.hbox1)
        self.vbox.add(self.hbox3)
        self.vbox.add(self.hbox5)
        self.vbox.add(self.hbox6)
        self.vbox.add(self.hbox7)
        self.window.show_all()
        self.window.connect("destroy", self.destroy)

    def main(self):
        gtk.main()

# Running Main Window
if __name__== "__main__":
    base = Base()
base.main()